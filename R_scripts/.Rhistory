drop_na()
combined_data <- inner_join(fatty_acids, utilities) %>%
inner_join(nutrients, ppcp) %>%
inner_join(., afdm) %>%
inner_join(., nutrients) %>%
inner_join(., fatty_acids_reduced) %>%
inner_join(., stoich_cleaned) %>%
mutate(carbon_mol_per_mg_tissue = log10(((carbon_mg/1000)/12.01)/total_dry_mass_carbon_mg),
nitrogen_mol_per_mg_tissue = log10(((nitrogen_mg/1000)/14)/total_dry_mass_nitrogen_mg),
phosphorus_mol_per_mg_tissue = log10(((phosphorus_ug/1000000)/30.97)/total_dry_mass_phosphorus_mg)) %>%
select(SITE, MONTH, total_ppcp, z_scored_conc, mean_afdm, z_scored_afdm,
LCUFA_HUFA:SCUFA_LUFA, mean_SRP, mean_NO3,
carbon_mol_per_mg_tissue, nitrogen_mol_per_mg_tissue, phosphorus_mol_per_mg_tissue) %>%
drop_na()
ggplot(combined_data, aes(x = log10(total_ppcp),
y = SCUFA_LUFA,
color = MONTH)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(rda_data %>% filter(z_scored_conc < 3), aes(x = log10(Cum_usage),
y = log10(total_ppcp))) +
geom_point(aes(color = SITE, shape = MONTH)) +
geom_smooth(method = "lm")
utilities_ppcp <- inner_join(utilities, ppcp) %>%
#filter(!(MONTH == "MAY" & SITE == "WF"),
#       !(MONTH == "MAY" & SITE == "LK")) %>%
#filter(SITE == "WF") %>%
mutate(ppcp_lag = lag(total_ppcp)) %>%
ggplot(aes(log10(Cum_usage), log10(ppcp_lag+1))) +
geom_point(aes(color = MONTH)) +
geom_smooth(method = "lm", se = T)
ppcp_state_park <- inner_join(state_park, ppcp) %>%
filter(!(SITE == "FI" & MONTH == "SEPTEMBER")) %>%
group_by(SITE) %>%
mutate(lead_ppcp_conc = lead(total_ppcp),
lead_z_score = lead(z_scored_conc),
zscore_visitors = scale(visitors))
ppcp_state_park$MONTH <- factor(ppcp_state_park$MONTH,
levels = c("MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER"))
ggplot(ppcp_state_park, aes(log10(), log10(lead_ppcp_conc),
color = MONTH)) +
geom_point(size = 3) +
facet_wrap(~ SITE)
library(tidyr)
library(dplyr)
library(ggplot2)
library(vegan)
FA.orig <- read.csv("../raw_data/Flathead_FA_cleaned_mfm_20180720.csv", header = TRUE)
unique(FA.orig$LOC)
SAFA <- c("C12.0", "C14.0", "C15.0", "C16.0", "C17.0", "C18.0", "C20.0", "C22.0", "iso.C15.0", "C24.0", "C26.0", "C28.0")
MUFA <- c( "C15.1", "C14.1n5", "C15.1w7", "C16.1w5", "C16.1w6", "C16.1w7", "C16.1w7c",  "C16.1w8", "C16.1w9", "C17.1n7", "C18.1w7", "C18.1w7c",
"C18.1w9", "C18.1w9c", "C20.1w7", "C20.1w9", "C22.1w7", "C22.1w9", "C22.1w9c")
LUFA <- c("C16.2", "C16.2w4",  "C16.2w6",  "C16.2w7",  "C16.3w3",  "C16.3w4",  "C16.3w6",  "C18.2w6",  "C18.2w6t", "C18.2w6c",
"C18.3w3",  "C18.3w6", "C20.2w6",  "C20.3w3",  "C20.3w6",  "C22.2w6",  "C22.3w3")
HUFA <- c("C16.4w1", "C16.4w3", "C18.4w3", "C18.4w4", "C18.5w3", "C20.4w2", "C20.4w3", "C20.4w6", "C20.5w3", "C22.4w3",
"C22.4w6", "C22.5w3", "C22.5w6", "C22.6w3")
SCUFA_LUFA <- c("C16.2", "C16.2w4",  "C16.2w6",  "C16.2w7",  "C16.3w3",  "C16.3w4",  "C16.3w6",  "C18.2w6", "C18.2w6c",
"C18.2w6t", "C18.3w3",  "C18.3w6")
LCUFA_LUFA <- c("C20.2w6",  "C20.3w3",  "C20.3w6",  "C22.2w6",  "C22.3w3")
SCUFA_HUFA <- c("C16.4w1", "C16.4w3", "C18.4w3", "C18.4w4", "C18.5w3")
LCUFA_HUFA <- c( "C20.4w2", "C20.4w3", "C20.4w6", "C20.5w3", "C22.4w3",
"C22.4w6", "C22.5w3", "C22.5w6", "C22.6w3")
SCUFA <- c("C16.2w4",  "C16.2w6",  "C16.2w7",  "C16.3w3",  "C16.3w4",  "C16.3w6",  "C18.2w6",  "C18.2w6t", "C18.2w6t",
"C18.3w3",  "C18.3w6", "C16.4w1", "C16.4w3", "C18.4w3", "C18.4w4", "C18.5w3")
LCUFA <- c( "C20.4w2", "C20.4w3", "C20.4w6", "C20.5w3", "C22.4w3",
"C22.4w6", "C22.5w3", "C22.5w6", "C22.6w3", "C20.2w6",  "C20.3w3",  "C20.3w6",  "C22.2w6",  "C22.3w3")
C18PUFA <- c("C18.2w6",  "C18.2w6t", "C18.3w3",  "C18.3w6", "C18.4w3", "C18.4w4", "C18.5w3")
C20PUFA <- c("C20.4w3", "C20.4w6", "C20.5w3", "C20.2w6",  "C20.3w3",  "C20.3w6")
FA.prop.all <- FA.orig %>%
select(-C19.0) %>%
gather(FATTYACID, CONC, C12.0:C28.0) %>%
dplyr::mutate(TYPE = ifelse(FATTYACID %in% SAFA, "SAFA", "OTHER"),
TYPE = ifelse(FATTYACID %in% MUFA, "MUFA", TYPE),
TYPE = ifelse(FATTYACID %in% SCUFA_LUFA, "SCUFA_LUFA", TYPE),
TYPE = ifelse(FATTYACID %in% SCUFA_HUFA, "SCUFA_HUFA", TYPE),
TYPE = ifelse(FATTYACID %in% LCUFA_HUFA, "LCUFA_HUFA", TYPE),
TYPE = ifelse(FATTYACID %in% LCUFA_LUFA, "LCUFA_LUFA", TYPE),
LOC = as.character(LOC),
MONTH = ifelse(MONTH == 7, "JULY", MONTH),
MONTH = ifelse(MONTH == 8, "AUGUST", MONTH),
MONTH = ifelse(MONTH == 9, "SEPTEMBER", MONTH))%>%
dplyr::group_by(LOC, MONTH) %>%
dplyr::mutate(TOTAL.FA = sum(CONC),
PROP.FA = CONC/TOTAL.FA) %>%
dplyr::select(-CONC, -TOTAL.FA, -TYPE) %>%
spread(FATTYACID, PROP.FA) %>%
as.data.frame()
mean <- as.vector(sapply(FA.prop.all[,3:31], mean))
var <- as.vector(sapply(FA.prop.all[,3:31], var))
mean.var <- data.frame(cbind(mean[1:29], var[1:29]))
colnames(mean.var)[colnames(mean.var) == "X1"] <- "Mean"
colnames(mean.var)[colnames(mean.var) == "X2"] <- "Variance"
mean.var <- dplyr::mutate(mean.var, Var.Mean.RATIO = Variance/Mean)
row.names(mean.var) <- colnames(FA.prop.all[,3:31])
mean.var[order(-mean.var$Variance),]
mean.var[order(-mean.var$Var.Mean.RATIO),]
FA.prop <- FA.prop.all %>%
dplyr::select(-contains("a."), -contains("i.")) %>%
gather(FATTYACID, PROP, 3:31) %>%
dplyr::mutate(TYPE = ifelse(FATTYACID %in% SAFA, "SAFA", "OTHER"),
TYPE = ifelse(FATTYACID %in% MUFA, "MUFA", TYPE),
TYPE = ifelse(FATTYACID %in% SCUFA_LUFA, "SCUFA_LUFA", TYPE),
TYPE = ifelse(FATTYACID %in% SCUFA_HUFA, "SCUFA_HUFA", TYPE),
TYPE = ifelse(FATTYACID %in% LCUFA_HUFA, "LCUFA_HUFA", TYPE),
TYPE = ifelse(FATTYACID %in% LCUFA_LUFA, "LCUFA_LUFA", TYPE))%>%
filter(TYPE != "OTHER") %>%
select(-FATTYACID) %>%
group_by(LOC, MONTH, TYPE) %>%
summarize(TOTAL.PROP = sum(PROP))
metaMDS.GEN <- metaMDS(FA.prop.all[,3:31], try = 100, k =2, autotransform = TRUE)
metaMDS.GEN
data.scores <- as.data.frame(scores(metaMDS.GEN))
data.scores$MONTH <- FA.prop.all[,2]
data.scores$SITE <- FA.prop.all[,1]
data.scores$ALA <- FA.prop.all$C18.3w3
data.scores$EPA <- FA.prop.all$C20.5w3
data.scores$DHA <- FA.prop.all$C22.6w3
data.scores$ARA <- FA.prop.all$C20.4w6
data.scores$SDA <- FA.prop.all$C18.4w3
species.scores <- as.data.frame(scores(metaMDS.GEN, "species"))
species.scores$species <- rownames(species.scores)
data.scores$MONTH <- factor(data.scores$MONTH, levels = c("JULY", "AUGUST", "SEPTEMBER"))
data.scores$SITE <- as.factor(data.scores$SITE)
data.scores$MONTH <- as.character(data.scores$MONTH)
data.scores$SITE <- as.character(data.scores$SITE)
data.scores <- inner_join(data.scores, weights_together, by = c("MONTH" = "MONTH", "SITE" = "LOC"))
data.scores <- data.scores %>%
group_by(SITE) %>%
mutate(PPCP_Z_SCORE = (scale(PPCP_SUM)))
nmds <- ggplot() +
geom_text(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),alpha=0.5) +  # add the species labels
geom_text(data=data.scores,
aes(x=NMDS1,y=NMDS2,label=SITE, col = MONTH, size = log10(weight))) +
#scale_size(range = c(2, 5)) + # add the site labels
#scale_color_manual(values = cividis(36)[c(1, 7, 12, 15, 27, 33)]) +
scale_size_continuous(range = c(5,15)) +
ggtitle("NMDS with Entire FA Spectrum") +
#coord_equal() +
#annotate("text", x = -0.5, y = 0.75, label = paste("Stress: ", round(metaMDS.GEN$stress, digits = 3))) +
theme_minimal()
nmds
FA.BIO <- FA.prop.all %>%
select(LOC, MONTH, C18.3w3, C18.4w3, C20.5w3, C22.6w3, C18.2w6c, C20.4w6) %>%
filter(!(LOC %in% c("WB", "YB"))) %>%
data.frame()
metaMDS.GEN <- metaMDS(FA.BIO[,3:8], try = 100)
metaMDS.GEN
data.scores <- as.data.frame(scores(metaMDS.GEN))
data.scores$MONTH <- FA.BIO[,2]
data.scores$SITE <- FA.BIO[,1]
data.scores <- inner_join(data.scores, weights_together, by = c("SITE" = "LOC",
"MONTH" = "MONTH"))
ggplot(rda_data %>% filter(z_scored_conc < 3), aes(x = log10(Cum_usage),
y = log10(total_ppcp))) +
geom_point(aes(color = SITE, shape = MONTH)) +
geom_smooth(method = "lm")
utilities_ppcp <- inner_join(utilities, ppcp) %>%
#filter(!(MONTH == "MAY" & SITE == "WF"),
#       !(MONTH == "MAY" & SITE == "LK")) %>%
#filter(SITE == "WF") %>%
mutate(ppcp_lag = lag(total_ppcp)) %>%
ggplot(aes(log10(Cum_usage), log10(ppcp_lag+1))) +
geom_point(aes(color = MONTH)) +
geom_smooth(method = "lm", se = T)
ppcp_state_park <- inner_join(state_park, ppcp) %>%
filter(!(SITE == "FI" & MONTH == "SEPTEMBER")) %>%
group_by(SITE) %>%
mutate(lead_ppcp_conc = lead(total_ppcp),
lead_z_score = lead(z_scored_conc),
zscore_visitors = scale(visitors))
ppcp_state_park$MONTH <- factor(ppcp_state_park$MONTH,
levels = c("MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER"))
ggplot(ppcp_state_park, aes(log10(), log10(lead_ppcp_conc),
color = MONTH)) +
geom_point(size = 3) +
facet_wrap(~ SITE)
ppcp_state_park
ggplot(ppcp_state_park, aes(log10(visitors), log10(lead_ppcp_conc),
color = MONTH)) +
geom_point(size = 3) +
facet_wrap(~ SITE)
rda_data
rda_results <- dbrda(rda_data[ , c(13, 15:17)] ~   z_scored_conc + mean_SRP,
data = rda_data, distance = "euclidean")
rda_results
plot(rda_results)
rda_results <- dbrda(rda_data[ , c(13, 15:17)] ~   Cum_usage + z_scored_conc + mean_SRP,
data = rda_data, distance = "euclidean")
rda_results
plot(rda_results)
rda_results <- dbrda(rda_data[ , c(13, 15:17)] ~   Cum_usage + z_scored_conc,
data = rda_data, distance = "euclidean")
rda_results
plot(rda_results)
rda_results <- dbrda(rda_data[ , c(13, 15:17)] ~   Cum_usage + z_scored_conc + mean_SRP,
data = rda_data, distance = "euclidean")
rda_results
plot(rda_results)
rda_results <- dbrda(rda_data[ , c(13, 15:17)] ~   Cum_usage + z_scored_conc + mean_SRP,
data = rda_data, distance = "bray")
rda_results
plot(rda_results)
space_time_model <- aov(total_conc_scale ~ SITE+month, data = samples_formatted)
ppcp_outputs <- list.files(pattern=".CSV",
path = "../raw_data/hplc_raw_output/",
recursive = TRUE)
ppcp_outputs <- paste0("../raw_data/hplc_raw_output/", ppcp_outputs)
dat_full <- data.frame()
for(i in 1:length(ppcp_outputs)){
if(ppcp_outputs[i] != "../raw_data/hplc_raw_output/Flathead_PPCP_20180904/STD_200UG_LINEA_20180830_ROW4.CSV") {
temp <- read.csv(paste(ppcp_outputs[i]), header = FALSE, fileEncoding= "UTF-16LE", sep = "\t")
}
else {
temp <- read.csv(paste(ppcp_outputs[i]), header = FALSE)
}
temp$FILE <- paste(ppcp_outputs[i])
dat_full <- rbind(dat_full, temp)
}
colnames(dat_full) <- c("PEAK_TIME", "AREA", "FILE")
dat_full$FILE <- gsub(pattern = "../raw_data/hplc_raw_output/", replacement = "", dat_full$FILE)
dat_full$FILE <- gsub(pattern = "Flathead_PPCP_20180920/", replacement = "", dat_full$FILE)
dat_full$FILE <- gsub(pattern = "Flathead_PPCP_20180904/", replacement = "", dat_full$FILE)
dat_full$FILE <- gsub(pattern = "Flathead_PPCP_20181001/", replacement = "", dat_full$FILE)
dat_full$FILE <- gsub(pattern = "Flathead_PPCP_20181008/", replacement = "", dat_full$FILE)
samples <- dat_full %>%
filter(!grepl("STD", FILE) & !grepl("BLANK", FILE)) %>%
mutate(FILE = gsub("\\.CSV", "", FILE)) %>%
separate(FILE, into = c("SITE", "MONTH", "TIME",  "LINE", "DATE_HPLC", "ROW"), sep = "_") %>%
mutate(PPCP = ifelse(ROW == "ROW2" & PEAK_TIME < 10, "acetaminophen", NA),
PPCP = ifelse(ROW == "ROW2" & PEAK_TIME > 10, "diphenhydramine", PPCP),
PPCP = ifelse(ROW == "ROW3" & PEAK_TIME < 10, "cotinine", PPCP),
PPCP = ifelse(ROW == "ROW3" & PEAK_TIME > 10, "carbamezapine", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME < 5, "paraxanthine", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME > 5 & PEAK_TIME < 10, "caffeine", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME > 10 & PEAK_TIME < 20, "sulfamexthazole", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME > 20 & PEAK_TIME < 30, "warfarin", PPCP))
samples$PPCP <- as.factor(samples$PPCP)
samples$SITE <- as.factor(samples$SITE)
samples$MONTH <- as.factor(samples$MONTH)
samples$TIME <- as.factor(samples$TIME)
samples$LINE <- as.factor(samples$LINE)
samples$DATE_HPLC <- as.factor(samples$DATE_HPLC)
samples$ROW <- as.factor(samples$ROW)
blanks <- dat_full %>%
filter(grepl("BLANK", FILE)) %>%
mutate(FILE = gsub("\\.CSV", "", FILE),
FILE = gsub("\\.txt", "", FILE)) %>%
separate(FILE, into = c("SAMPLE", "LINE", "DATE_HPLC", "ROW"), sep = "_") %>%
mutate(PPCP = ifelse(ROW == "ROW2" & PEAK_TIME < 10, "acetaminophen", NA),
PPCP = ifelse(ROW == "ROW2" & PEAK_TIME > 10, "diphenhydramine", PPCP),
PPCP = ifelse(ROW == "ROW3" & PEAK_TIME < 10, "cotinine", PPCP),
PPCP = ifelse(ROW == "ROW3" & PEAK_TIME > 10, "carbamezapine", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME < 5, "paraxanthine", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME > 5 & PEAK_TIME < 10, "caffeine", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME > 10 & PEAK_TIME < 20, "sulfamexthazole", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME > 20 & PEAK_TIME < 30, "warfarin", PPCP))
blanks$PPCP <- as.factor(blanks$PPCP)
blanks$SAMPLE <- as.factor(blanks$SAMPLE)
blanks$LINE <- as.factor(blanks$LINE)
blanks$DATE_HPLC <- as.factor(blanks$DATE_HPLC)
blanks$ROW <- as.factor(blanks$ROW)
blanks.join <- select(blanks, PPCP, LINE, AREA)
samples <- left_join(samples, blanks.join, by = c("PPCP", "LINE")) %>%
mutate(AREA.y = ifelse(is.na(AREA.y), 0, AREA.y),
AREA = AREA.x - AREA.y)
standards <- dat_full %>%
filter(grepl("STD", FILE)) %>%
mutate(FILE = gsub("\\.CSV", "", FILE)) %>%
separate(FILE, into = c("SAMPLE", "CONCENTRATION", "LINE", "DATE_HPLC", "ROW"), sep = "_") %>%
mutate(PPCP = ifelse(ROW == "ROW2" & PEAK_TIME < 10, "acetaminophen", NA),
PPCP = ifelse(ROW == "ROW2" & PEAK_TIME > 10, "diphenhydramine", PPCP),
PPCP = ifelse(ROW == "ROW3" & PEAK_TIME < 10, "cotinine", PPCP),
PPCP = ifelse(ROW == "ROW3" & PEAK_TIME > 10, "carbamezapine", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME < 5, "paraxanthine", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME > 5 & PEAK_TIME < 10, "caffeine", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME > 10 & PEAK_TIME < 20, "sulfamexthazole", PPCP),
PPCP = ifelse(ROW == "ROW4" & PEAK_TIME > 20 & PEAK_TIME < 30, "warfarin", PPCP)) %>%
filter(!is.na(PPCP)) %>%
mutate(CONCENTRATION_FIX = ifelse(CONCENTRATION == "20NG", "2NG", CONCENTRATION),
CONCENTRATION_FIX = ifelse(CONCENTRATION == "200NG", "20NG", CONCENTRATION_FIX),
CONCENTRATION_FIX = ifelse(CONCENTRATION == "2NG", "200NG", CONCENTRATION_FIX)) %>%
separate(CONCENTRATION_FIX, into = c("CONCENTRATION_FIX", "UNITS"), sep = -2, remove = TRUE) %>%
mutate(CONCENTRATION_FIX = ifelse(CONCENTRATION_FIX == 2 & UNITS == "UG", 2000, CONCENTRATION_FIX),
CONCENTRATION_FIX = ifelse(CONCENTRATION_FIX == 20 & UNITS == "UG", 20000, CONCENTRATION_FIX),
CONCENTRATION_FIX = ifelse(CONCENTRATION_FIX == 200 & UNITS == "UG", 200000, CONCENTRATION_FIX),
CONCENTRATION_FIX = ifelse(CONCENTRATION_FIX == 2 & UNITS == "MG", 2000000, CONCENTRATION_FIX)) %>%
filter(CONCENTRATION_FIX != 200000)
mutate(CONCENTRATION_FIX = as.numeric(CONCENTRATION_FIX),
CONCENTRATION_FIX = (CONCENTRATION_FIX/1000))
standards$PPCP <- as.factor(standards$PPCP)
standards$SAMPLE <- as.factor(standards$SAMPLE)
standards$LINE <- as.factor(standards$LINE)
standards$DATE_HPLC <- as.factor(standards$DATE_HPLC)
standards$ROW <- as.factor(standards$ROW)
standards$UNITS <- as.factor(standards$UNITS)
standards$CONCENTRATION_FIX <- as.numeric(standards$CONCENTRATION_FIX)
standards %>%
filter(CONCENTRATION_FIX != 200000) %>%
filter(!(PPCP == "warfarin" & log10(AREA) <= 5)) %>%
ggplot(aes(log10(CONCENTRATION_FIX), log10(AREA))) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~ PPCP)
aceta.lm <- lm(log10(CONCENTRATION_FIX) ~ log10(AREA) , data = standards[standards$PPCP == "acetaminophen",])
summary(aceta.lm)
caff.lm <- lm(log10(CONCENTRATION_FIX) ~ log10(AREA), data = standards[standards$PPCP == "caffeine",])
summary(caff.lm)
carb.lm <- lm(log10(CONCENTRATION_FIX) ~ log10(AREA), data = standards[standards$PPCP == "carbamezapine",])
summary(carb.lm)
cot.lm <- lm(log10(CONCENTRATION_FIX) ~ log10(AREA), data = standards[standards$PPCP == "cotinine",])
summary(cot.lm)
diph.lm <- lm(log10(CONCENTRATION_FIX) ~ log10(AREA), data = standards[standards$PPCP == "diphenhydramine",])
summary(diph.lm)
para.lm <- lm(log10(CONCENTRATION_FIX) ~ log10(AREA), data = standards[standards$PPCP == "paraxanthine",])
summary(para.lm)
sulfa.lm <- lm(log10(CONCENTRATION_FIX) ~ log10(AREA), data = standards[standards$PPCP == "sulfamexthazole",])
summary(sulfa.lm)
warf.lm <- lm(log10(CONCENTRATION_FIX) ~ log10(AREA), data = standards[standards$PPCP == "warfarin" &
log10(standards$AREA) >= 5,])
summary(warf.lm)
aceta_data <- filter(samples, PPCP == "acetaminophen")
new <- data.frame(AREA = aceta_data$AREA)
aceta_data$CONCENTRATION <- predict.lm(aceta.lm, newdata = new)
aceta_data$CONCENTRATION <- 10^(aceta_data$CONCENTRATION)
caff_data <- filter(samples, PPCP == "caffeine")
new <- data.frame(AREA = caff_data$AREA)
caff_data$CONCENTRATION <- predict.lm(caff.lm, newdata = new)
caff_data$CONCENTRATION <- 10^(caff_data$CONCENTRATION)
carb_data <- filter(samples, PPCP == "carbamezapine")
new <- data.frame(AREA = carb_data$AREA)
carb_data$CONCENTRATION <- predict.lm(carb.lm, newdata = new)
carb_data$CONCENTRATION <- 10^(carb_data$CONCENTRATION)
cot_data <- filter(samples, PPCP == "cotinine")
new <- data.frame(AREA = cot_data$AREA)
cot_data$CONCENTRATION <- predict.lm(cot.lm, newdata = new)
cot_data$CONCENTRATION <- 10^(cot_data$CONCENTRATION)
diph_data <- filter(samples, PPCP == "diphenhdyramine")
new <- data.frame(AREA = diph_data$AREA)
diph_data$CONCENTRATION <- predict.lm(diph.lm, newdata = new)
diph_data$CONCENTRATION <- 10^(diph_data$CONCENTRATION)
para_data <- filter(samples, PPCP == "paraxanthine")
new <- data.frame(AREA = para_data$AREA)
para_data$CONCENTRATION <- predict.lm(para.lm, newdata = new)
para_data$CONCENTRATION <- 10^(para_data$CONCENTRATION)
sulfa_data <- filter(samples, PPCP == "sulfamexathazole")
new <- data.frame(AREA = sulfa_data$AREA)
sulfa_data$CONCENTRATION <- predict.lm(sulfa.lm, newdata = new)
sulfa_data$CONCENTRATION <- 10^(sulfa_data$CONCENTRATION)
warf_data <- filter(samples, PPCP == "warfarin")
new <- data.frame(AREA = warf_data$AREA)
warf_data$CONCENTRATION <- predict.lm(warf.lm, newdata = new)
warf_data$CONCENTRATION <- 10^(warf_data$CONCENTRATION)
samples_full <- rbind(aceta_data, caff_data, carb_data, cot_data, diph_data, para_data, sulfa_data, warf_data)
summary(samples_full)
samples_full <- samples_full %>%
mutate(MONTH = as.character(MONTH),
MONTH = trimws(MONTH),
MONTH = ifelse(MONTH == "JUNY", "JUNE", MONTH),
MONTH = ifelse(MONTH == "SEPT", "SEPTEMBER", MONTH),
MONTH = ifelse(MONTH == "OCTOBER", "SEPTEMBER", MONTH)) %>%
filter(MONTH != "XXXX")
samples_full <- read.csv("../cleaned_data/ppcp.csv")
samples_full %>%
filter(!(SITE %in% c("FI2", "DU2", "HO1"))) %>%
mutate(YEAR = 2017) %>%
unite("MDY", MONTH, TIME, YEAR, remove = FALSE, sep = "-") %>%
mutate(MDY = mdy(MDY),
rounded_date = round_date(MDY, unit = "week")) %>%
group_by(SITE, rounded_date, PPCP) %>%
summarize(mean_concentration = mean(CONCENTRATION, na.rm = TRUE)) %>%
mutate(z_score_conc = scale(mean_concentration)) %>%
ungroup() %>%
#mutate(MONTH = factor(MONTH, levels = c("MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER"))) %>%
ggplot(aes(rounded_date, z_score_conc, color = PPCP, group = PPCP)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = FALSE) +
#ylim(0,0.001) +
#stat_summary(geom = "line") +
facet_wrap(~ SITE)
samples_full %>%
filter(!(SITE %in% c("FI2", "DU2", "HO1"))) %>%
mutate(YEAR = 2017) %>%
unite("MDY", MONTH, TIME, YEAR, remove = FALSE, sep = "-") %>%
mutate(MDY = mdy(MDY),
rounded_date = round_date(MDY, unit = "week")) %>%
group_by(SITE, rounded_date, PPCP) %>%
summarize(mean_concentration = mean(CONCENTRATION, na.rm = TRUE)) %>%
ungroup() %>%
group_by(SITE, rounded_date) %>%
summarize(total_conc = sum(mean_concentration, na.rm = TRUE)) %>%
mutate(z_score_conc = scale(total_conc)) %>%
ungroup() %>%
ggplot(aes(rounded_date, log10(total_conc+1))) +
geom_point(size = 3) +
geom_smooth(method = "loess", se = FALSE) +
#ylim(0,0.001) +
#stat_summary(geom = "line") +
facet_wrap(~ SITE)
samples_formatted <- samples_full %>%
filter(!(SITE %in% c("FI2", "DU2", "HO1"))) %>%
mutate(TIME = as.numeric(TIME),
sampling_event = ifelse(MONTH == "MAY", "MAY_1", NA),
sampling_event = ifelse(MONTH == "JUNE" & between(TIME, 1,6), "MAY_1", sampling_event),
sampling_event = ifelse(MONTH == "JUNE" & between(TIME, 7, 26), "JUNE_1", sampling_event),
sampling_event = ifelse(MONTH == "JUNE" & between(TIME, 27, 30), "JUNE_2", sampling_event),
sampling_event = ifelse(MONTH == "JULY" & between(TIME, 1,11), "JUNE_2", sampling_event),
sampling_event = ifelse(MONTH == "JULY" & between(TIME, 12,24), "JULY_1", sampling_event),
sampling_event = ifelse(MONTH == "JULY" & between(TIME, 25,31), "JULY_2", sampling_event),
sampling_event = ifelse(MONTH == "AUGUST" & between(TIME, 1,8), "JULY_2", sampling_event),
sampling_event = ifelse(MONTH == "AUGUST" & between(TIME, 9,21), "AUGUST_1", sampling_event),
sampling_event = ifelse(MONTH == "AUGUST" & between(TIME, 22,31), "AUGUST_2", sampling_event),
sampling_event = ifelse(MONTH == "SEPTEMBER" & between(TIME, 1,5), "AUGUST_2", sampling_event),
sampling_event = ifelse(MONTH == "SEPTEMBER" & between(TIME, 6,18), "SEPTEMBER_1", sampling_event),
sampling_event = ifelse(MONTH == "SEPTEMBER" & between(TIME, 19,30), "SEPTEMBER_2", sampling_event),
sampling_event = ifelse(MONTH == "OCTOBER", "SEPTEMBER_2", sampling_event)) %>%
group_by(SITE, sampling_event, PPCP) %>%
summarize(mean_conc = mean(CONCENTRATION, na.rm = TRUE)) %>%
ungroup() %>%
group_by(SITE, sampling_event) %>%
summarize(total_conc = sum(mean_conc, na.rm = TRUE)) %>%
ungroup() %>%
#group_by(SITE) %>%
mutate(total_conc_log = log10(total_conc+1),
total_conc_scale = scale(total_conc_log)) %>%
filter(total_conc_scale <= 2) %>%
mutate(total_conc_scale = scale(total_conc_log)) %>%
separate(sampling_event, into = c("month", "event"))
space_time_model <- aov(total_conc_scale ~ SITE+month, data = samples_formatted)
Anova(space_time_model, type = "II")
library(car)
Anova(space_time_model, type = "II")
Anova(space_time_model, type = "III")
actual_f_value <- data.frame(as.numeric(Anova(space_time_model, type = "II")$`F value`)[1:2])
Anova(space_time_model, type = "II")
actual_f_value <- data.frame(as.numeric(Anova(space_time_model, type = "II")$`F value`)[1:2])
parameter <- c("space_vector", "time_vector")
actual_results <- cbind(parameter, actual_f_value)
colnames(actual_results)[2] <- "value"
n_interations <- 5000
space_vector <- rep(0, n_interations)
time_vector <- rep(0, n_interations)
spacetime_vector <- rep(0, n_interations)
for(i in 1:n_interations){
permuted_data <- samples_formatted %>%
select(total_conc_scale) %>%
sample_frac(., size = 1) %>%
rename("permuted_total_conc_scale" = "total_conc_scale") %>%
cbind(., samples_formatted)
permuted_space_time_model <- lm(permuted_total_conc_scale  ~ SITE+month, data = permuted_data)
f_values <- as.numeric(Anova(permuted_space_time_model, type = "II")$`F value`)
space_vector[i] <- f_values[1]
time_vector[i] <- f_values[2]
spacetime_vector <- f_values[3]
}
FA.prop.all
data.frame(space_vector, time_vector, spacetime_vector) %>%
gather(parameter, value, space_vector:time_vector) %>%
ggplot(., aes(value)) +
geom_histogram() +
geom_vline(data = actual_results, aes(xintercept = value)) +
xlab("F-value from ANOVA") +
facet_grid(vars(parameter))
library(nlme)
space_time_model <- gls(total_conc_scale ~ SITE+month, data = samples_formatted)
Anova(space_time_model, type = "II")
Anova(space_time_model, type = "II")
space_time_model <- gls(total_conc_scale ~ month, data = samples_formatted,
correlation = corAR1(form = ~ 1 | SITE))
summary(space_time_model)
space_time_model
samples_formatted
samples_formatted_dummy <- samples_formatted %>%
unite("month_time", month, event)
samples_formatted_dummy
samples_formatted_dummy$month_time <- factor(samples_formatted_dummy$month_time,
levels = C("MAY_1", "JUNE_1", "JUNE_2",
"JULY_1", "JULY_2", "AUGUST_1",
"AUGUST_2", "SEPTEMBER_1",
"SEPTEMBER_2"))
samples_formatted_dummy$month_time <- factor(samples_formatted_dummy$month_time,
levels = c("MAY_1", "JUNE_1", "JUNE_2",
"JULY_1", "JULY_2", "AUGUST_1",
"AUGUST_2", "SEPTEMBER_1",
"SEPTEMBER_2"))
samples_formatted_dummy
summary(samples_formatted_dummy)
samples_formatted_dummy$month_time <- as.numeric(factor(samples_formatted_dummy$month_time,
levels = c("MAY_1", "JUNE_1", "JUNE_2",
"JULY_1", "JULY_2", "AUGUST_1",
"AUGUST_2", "SEPTEMBER_1",
"SEPTEMBER_2")))
samples_formatted_dummy
samples_formatted_dummy <- samples_formatted %>%
unite("month_time", month, event, remove = FALSE)
samples_formatted_dummy$month_time <- as.numeric(factor(samples_formatted_dummy$month_time,
levels = c("MAY_1", "JUNE_1", "JUNE_2",
"JULY_1", "JULY_2", "AUGUST_1",
"AUGUST_2", "SEPTEMBER_1",
"SEPTEMBER_2")))
samples_formatted_dummy
space_time_model <- gls(total_conc_scale ~ month_time, data = samples_formatted_dummy,
correlation = corAR1(form = ~ 1 | SITE))
summary(space_time_model)
space_time_model <- gls(total_conc_scale ~ SITE, data = samples_formatted_dummy,
correlation = corAR1(form = ~ 1 | month_time))
summary(space_time_model)
hist(resid(space_time_model))
space_time_model <- gls(total_conc_scale ~ month_time, data = samples_formatted_dummy,
correlation = corAR1(form = ~ 1 | SITE))
summary(space_time_model)
fitted(space_time_model)
qqnorm(resid(space_time_model))
